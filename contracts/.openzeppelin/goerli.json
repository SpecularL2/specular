{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xE3F10fEe8A9A1F37D2831e2d4790E7cFD9183D1c",
    "txHash": "0x11502993c8116c3eb051bb5f6f921d1bed2953c3dd934230d949ec4a398445f4"
  },
  "proxies": [
    {
      "address": "0x92F7130fBE61526b390A3492253610217FeAd3b3",
      "txHash": "0x74f425198684455e0006ae48a1fe865a4d0267e4c9c3d7702942c371f8bd3078",
      "kind": "transparent"
    },
    {
      "address": "0x86E4d4689DB3B3b1182cB6Ab0F6F1dE65829F7bB",
      "txHash": "0xc224989afcdea58aa39bfec57409a488b9ed35f67a3ab45576dca699acc20d91",
      "kind": "transparent"
    },
    {
      "address": "0xB04b9830dd1E8F3AC75028fF20a29c529F9d497a",
      "txHash": "0x708cf9283ae3bd0f661ac17c2c78c2db417dc96580fe4053ff84eac051c065c7",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e6ab26ed6923cc0d43642422f0895c2180c2a23129f7032d445ff074e2f4d138": {
      "address": "0x9275d1a90d95a04805e13babD195d959dBba1cFD",
      "txHash": "0xff259ed21b2c12cdddd976100a1c6080d013fa0d9515512ece0e2ae576c855d5",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "inboxSize",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "SequencerInbox",
            "src": "src/SequencerInbox.sol:34"
          },
          {
            "label": "accumulators",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "SequencerInbox",
            "src": "src/SequencerInbox.sol:36"
          },
          {
            "label": "sequencerAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "SequencerInbox",
            "src": "src/SequencerInbox.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cc8eee26f668497ce4758ad1aa0268931b75410a4737a93fbda417a7d62c8809": {
      "address": "0x0D0247Ad91FAf848921b7B76711f87f250934fcd",
      "txHash": "0xaff1d6a7fa8000d4b479a967c14d095c669cfab9d6635629f674f2cd2636ca0e",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f2768aa2eb9910de815bf151cdea261c22859f88202ce7e302f1f8685a7a487f": {
      "address": "0x5c6e3cF040ABd71e79B6B19bc4118255178da59E",
      "txHash": "0x4e23eb831a3b3644a3495481ed3e475a532442d03e712bfe903ce09f57102ba2",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "confirmationPeriod",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RollupBase",
            "src": "src/Rollup.sol:37"
          },
          {
            "label": "challengePeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "RollupBase",
            "src": "src/Rollup.sol:38"
          },
          {
            "label": "minimumAssertionPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "RollupBase",
            "src": "src/Rollup.sol:39"
          },
          {
            "label": "maxGasPerAssertion",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "RollupBase",
            "src": "src/Rollup.sol:40"
          },
          {
            "label": "baseStakeAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "RollupBase",
            "src": "src/Rollup.sol:41"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "RollupBase",
            "src": "src/Rollup.sol:43"
          },
          {
            "label": "stakeToken",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IERC20)471",
            "contract": "RollupBase",
            "src": "src/Rollup.sol:44"
          },
          {
            "label": "sequencerInbox",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(ISequencerInbox)939",
            "contract": "RollupBase",
            "src": "src/Rollup.sol:45"
          },
          {
            "label": "assertions",
            "offset": 0,
            "slot": "9",
            "type": "t_contract(AssertionMap)776",
            "contract": "RollupBase",
            "src": "src/Rollup.sol:46"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IVerifier)3623",
            "contract": "RollupBase",
            "src": "src/Rollup.sol:47"
          },
          {
            "label": "lastResolvedAssertionID",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "Rollup",
            "src": "src/Rollup.sol:69"
          },
          {
            "label": "lastConfirmedAssertionID",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "Rollup",
            "src": "src/Rollup.sol:70"
          },
          {
            "label": "lastCreatedAssertionID",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "Rollup",
            "src": "src/Rollup.sol:71"
          },
          {
            "label": "numStakers",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "Rollup",
            "src": "src/Rollup.sol:74"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_struct(Staker)987_storage)",
            "contract": "Rollup",
            "src": "src/Rollup.sol:75"
          },
          {
            "label": "withdrawableFunds",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Rollup",
            "src": "src/Rollup.sol:76"
          },
          {
            "label": "zombies",
            "offset": 0,
            "slot": "17",
            "type": "t_array(t_struct(Zombie)992_storage)dyn_storage",
            "contract": "Rollup",
            "src": "src/Rollup.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Zombie)992_storage)dyn_storage": {
            "label": "struct RollupBase.Zombie[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AssertionMap)776": {
            "label": "contract AssertionMap",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)471": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISequencerInbox)939": {
            "label": "contract ISequencerInbox",
            "numberOfBytes": "20"
          },
          "t_contract(IVerifier)3623": {
            "label": "contract IVerifier",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Staker)987_storage)": {
            "label": "mapping(address => struct RollupBase.Staker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Staker)987_storage": {
            "label": "struct RollupBase.Staker",
            "members": [
              {
                "label": "isStaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assertionID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "currentChallenge",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Zombie)992_storage": {
            "label": "struct RollupBase.Zombie",
            "members": [
              {
                "label": "stakerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastAssertionID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
