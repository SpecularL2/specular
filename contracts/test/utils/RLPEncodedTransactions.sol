// SPDX-License-Identifier: WTFPL

pragma solidity ^0.8.0;

import "forge-std/Test.sol";

contract RLPEncodedTransactionsUtil is Test {
    bytes[10] rlpEncodedTransactions = [
        bytes("0xf90110808514f10fd38a880317df281de62604940d9f61556db6ec637957de006e203cf92d74a21b9116a8de9f963bc0190edc97b9163d640000b8945950424f48754a67504453326246627a544b384f307a426a74476651634739347a6330686c486d6132617341585959776b764a425338446c6c6f5a674e39646b534448734e756b683263653170597065726e7777586e4c307836685973514e706878514e61664a33344b5942617a6b6e5131636930634b6c773245564961664c59386a7771676e6368765639764a77686a7a394f2da0b70232efc3abd856a414290e9ed964286dff786c75d3342ff4d179cab5bde707a00e49b927678a8298ca66cea0372e8998eeddd29644e731760089ee439e5784ac"),
        bytes("0xf8ee808514f10fd38a88082d8bb98a01c0ac944e53b2b24149f8555a3dc30fdc21d8f7e43868429112abbc5a9b8205baabf705cf32f2640000b8726d6a77754766424a6147666631584b6a5877366177516a51514a764332683163535866696a4c5864437061396d55354f544f476c5861443941416e436e6b536e7266513759394f4f77386d4e45524f4f72576b614b51304b3246324764716c444e72336b4c6f4330306539725a69747171302ea09dc0f214b2e4f8c8cef68cf907dd2d16487c40814191f3119d294472d3d00ef7a0020380c3da38789b8f4c4614533778f3de86ab1cd98efaf39849b62ca0d5fd75"),
        bytes("0xf8da808514f10fd38a880412d004195183cc94f0335f208e2b4d0eb8a6ec555fcf2adf8f6c7c8291072f2481b1e403abb3249c0afd12640000b85e386f4f6969595756516f4c69626357315052754d73743758783956426165706b486c6936634f50395949415a4c506f4a47565471774f795374674a51595245344f5a4a43596e6448544e4246536858657839317077344c6969506c346c372da0d40ee02b02b6c75352c3c29529d6e8d1c7735ef0f2757aa1c1369b14855140dea0524b24bd61b9a22b5ddf987c9d02d4c0071848605480bc66ddf57d435715377c"),
        bytes("0xf8ad808514f10fd38a8803f1d72c29cbfc3894d73e3ec4d725f6c3c657d727f91b9535341a40b191068fa612d1f02074374b46e4398c640000b26a385932456b635753484c5666625064424e6879514d456e6c345576767446614e32643367543146346b7765686e724d466a2ea057bb9c278c72ff4aa63637489710495890b54d3b369e3267806fdeb8b8f7d453a00e7fa9b6901f475c2ebc6beeff40244035ed226ef8d3a9da374f9da26b7fb317"),
        bytes("0xf901bf808514f10fd38a880455f2c61a550a3c9478b1d60e489b646ba27c37d270754ae790cac345910d7e1cef251cf2f88b5792360882640000b90142324f6b576b583870517532706a734172484a3648477937736b65306767636b37544f79334143436458676b4a4d69546334754b76717464736532536234564a74326b70785845524b6f4f353739756e656a69596a6e3655766a54496468777131776f435279733035727053456b66566d4b32734e75397854324666314a3634527a6737366f554f5833677466734d4166626645676c744c59585545376533556279344b7247676e754e6e4873574965643952463273584d4b6354656434545768397772794f4c4a7a724d4a3934763635697a3655323655584948306e65533668674c7468513756737a4652576631583032653652386c4a5757707365707654614842617059396e76556159694b303669703246434c47656134646b4a73566a32785572625156725659776d5368645964476253623362675647546279357a716e646d2ea060b36a46dea5314cb4f144540787f7e2d28521bb89ec11fea1e8fec79ca75190a078173b3c0481ad755eb43e7b41230e17edc3f33858ebc7c43500ec68cc910c43"),
        bytes("0xf901b4808514f10fd38a880ce017a2ab118a309420a7ec8432d4f6dc92b845d46f1692fc13e4fa06910d464323c6c90317836757a4f47be40000b9013754675277774f6e394c4f6b496b6d6e3447336b583730516750454f59706d68527266554d4d356f5155545a4f7a6e313357437157767758737a526161705a796f5444656d386c4e4c3241387258415a666a453669474a39416868374238615234595859796462456156416534654452796e7772747435584c4169667a6241426749396a7a4e6a4a6e564f4f6d6641464d4f71484a7457514c3945596c4231527a4a4c4b694c5a307631786e514332325a374f74415150534f7646774f714a3568576174317037307a506c6e53484e465736515a58777337523847324542794d46524261664f516f4e636445547a496b61487464657048474f4c4d584c4476337350774a515073706e36676c67446e75786f6e6d61466154586770794b625273564342396d6c794f7353394c4b4f7148377743706c3052362ea04eb1e62064940240e34bf586d10503973ada43fb68c26971adf46c6c91ae5fe7a02aaf9d074fff6d0ae5d5056331f3c3024d5eaf8ea10b9eb16474528e3f514e2f"),
        bytes("0xf901b9808514f10fd38a8805ebd3f95607ec7e94083da8309a58230521ec25f4a04c6396a4441d3d910687bcfddd4614e079bb686914b0640000b9013c6a6f4b33315568785365437741446c364b66364c4d33674456646144757969336138376362564c5143764f6e6650426e6d52315451615a597a344c3643776e4f764133517568717535496a6d4931753056375058577a37596767676f666631486f4c77716a6c654a73426f7a6e5374666464704370526f6731705277656a32457362517a663656503356505053506e725877754736454c7a6171544971466358586b3331534b336a77794b554e32414335333641564a553747354f5151306f4a4633527052395079514a737a4968544e5735686d62304334316c39786976486461673234376478774c43546839455778634b595066773553347934756e544e4b7056476b32326c78327165517371507637566266754f31334776705443305576474534446869536277415a566a326c7366386767646e57576d7374612ea052734a33139e06b528867b69a2faca78cab7ba4c8748585f06fa48cf7dc7b6f9a03c814576dc4f0d48bcd48beea9000490ab941f83eb6d05ab8b1662101a23a843"),
        bytes("0xf8f5808514f10fd38a8803a5fd618372d40094606dc07c17ed605478ae950cf9b2331022a1820891152cb816bfcb8eec3a7c54514baa640000b8796b79514c4237764c65536d706a426770694d4f796848514f6f7250583457713937723565333963486630676b344a6a51576c354b656f7051716d796d4e764b54733756685245774466644a50576a79586b385a444f764267464733786e3170486836677a76534b304c7458784f5133726f314d7965545042702da06754128f5736fa0f24eb57a8075f91968d75f6050ae27bfeb655980f418b97c1a05b4d26b7987b95ad790493c9910fd423bf6321d4ff995b5e35f7ddbec2ca94a2"),
        bytes("0xf90191808514f10fd38a8809e862d288404cf094ec6eb8b37a6ef25394219b8d36911a579fff67c29102c57b1eed8e69c4920557cd5ca5e40000b9011468627933384a433036686e6772726e585a38366472534a44496d5a7152707661497a3367493563746d58496f31464167565030476c674961753076354c506b71743637495846395945434f7878464f3039424c536d6a43313333594e36395969427638667a384731723334784b634c784175776233416b57744279506a69625332324833534f4f57664e5761786174473736754170723752436c78754c68676b685148763556787479626548417663666f6d47384f454a6a654978584f6649687771334b6e363459564277584b354871756a664b4a5a723251474d676b67536557506f626751433831654b5175354364695139654177326776545547344534585656644f764f6c6a67453058576d7475465679552ea0f020dece87cf0d8d22a5bd5a0b39abd15880f89a85939a6b6c9d59f4b84b020fa03ef00c64be4a994d7c4b0e05a223e560308ad902e74e33a99c5e2c6c3e637205"),
        bytes("0xf9010a808514f10fd38a8806bed7c46b0ef5c094249e1ef56d11e9aa0b1728767bbb347442d705999114bc6cd4a853310348f3e504d7d8640000b88e33654444624f4d4c644238484a727971316f6374745a53666f774454687a4e6a6b375236633879706638316b433043626464717259595269744b38526554534f3464767a424a61517a475576423930556161705a52477044364c523239446a577376707a553458355270757858686853617267396a436464523768777a5854496675364d6336734c6852526876372ea04a16130b963d5d67d9c7a7bef1c81d8d2e493b1145bd4602bee5e27eb20c270aa057fc6bc02f038fa8ebe5e92228106b7e830f84ca7a22ab1ad5d6bc065bda178c")
    ];

    address[10] txnSenders = [
        0xe515F89b31fa593C94E2029D3a10fF0758Cf532d,
        0x2A7462Ba347dB426e0f4Fc4FA466F667Dec1d4Af,
        0x689684193336E0099De51df9B4D78C669673F061,
        0x2132fd8511759dc51a973B00F5E72d634580661F,
        0x5b1B3784E06814196038f3628E7dD7934Ea68bE5,
        0xc70f5aB6De13dDBec9993444D5986eF196B26365,
        0x48AcF62F3Ee7325FdFBa889Db7b7170f85691Dd4,
        0x35F6a1BDaC942D56B2E4A3dfB91Df177bE071ADf,
        0x9e35e586617E250a32032996F8AeF2b0B52FA41E,
        0x2ae296d677356A7c3a232f04304Fb7F1f3863480
    ];

    bytes[10] txnData = [
        bytes("0x5950424f48754a67504453326246627a544b384f307a426a74476651634739347a6330686c486d6132617341585959776b764a425338446c6c6f5a674e39646b534448734e756b683263653170597065726e7777586e4c307836685973514e706878514e61664a33344b5942617a6b6e5131636930634b6c773245564961664c59386a7771676e6368765639764a77686a7a394f"),
        bytes("0x6d6a77754766424a6147666631584b6a5877366177516a51514a764332683163535866696a4c5864437061396d55354f544f476c5861443941416e436e6b536e7266513759394f4f77386d4e45524f4f72576b614b51304b3246324764716c444e72336b4c6f4330306539725a6974717130"),
        bytes("0x386f4f6969595756516f4c69626357315052754d73743758783956426165706b486c6936634f50395949415a4c506f4a47565471774f795374674a51595245344f5a4a43596e6448544e4246536858657839317077344c6969506c346c37"),
        bytes("0x6a385932456b635753484c5666625064424e6879514d456e6c345576767446614e32643367543146346b7765686e724d466a"),
        bytes("0x324f6b576b583870517532706a734172484a3648477937736b65306767636b37544f79334143436458676b4a4d69546334754b76717464736532536234564a74326b70785845524b6f4f353739756e656a69596a6e3655766a54496468777131776f435279733035727053456b66566d4b32734e75397854324666314a3634527a6737366f554f5833677466734d4166626645676c744c59585545376533556279344b7247676e754e6e4873574965643952463273584d4b6354656434545768397772794f4c4a7a724d4a3934763635697a3655323655584948306e65533668674c7468513756737a4652576631583032653652386c4a5757707365707654614842617059396e76556159694b303669703246434c47656134646b4a73566a32785572625156725659776d5368645964476253623362675647546279357a716e646d"),
        bytes("0x54675277774f6e394c4f6b496b6d6e3447336b583730516750454f59706d68527266554d4d356f5155545a4f7a6e313357437157767758737a526161705a796f5444656d386c4e4c3241387258415a666a453669474a39416868374238615234595859796462456156416534654452796e7772747435584c4169667a6241426749396a7a4e6a4a6e564f4f6d6641464d4f71484a7457514c3945596c4231527a4a4c4b694c5a307631786e514332325a374f74415150534f7646774f714a3568576174317037307a506c6e53484e465736515a58777337523847324542794d46524261664f516f4e636445547a496b61487464657048474f4c4d584c4476337350774a515073706e36676c67446e75786f6e6d61466154586770794b625273564342396d6c794f7353394c4b4f7148377743706c305236"),
        bytes("0x6a6f4b33315568785365437741446c364b66364c4d33674456646144757969336138376362564c5143764f6e6650426e6d52315451615a597a344c3643776e4f764133517568717535496a6d4931753056375058577a37596767676f666631486f4c77716a6c654a73426f7a6e5374666464704370526f6731705277656a32457362517a663656503356505053506e725877754736454c7a6171544971466358586b3331534b336a77794b554e32414335333641564a553747354f5151306f4a4633527052395079514a737a4968544e5735686d62304334316c39786976486461673234376478774c43546839455778634b595066773553347934756e544e4b7056476b32326c78327165517371507637566266754f31334776705443305576474534446869536277415a566a326c7366386767646e57576d737461"),
        bytes("0x6b79514c4237764c65536d706a426770694d4f796848514f6f7250583457713937723565333963486630676b344a6a51576c354b656f7051716d796d4e764b54733756685245774466644a50576a79586b385a444f764267464733786e3170486836677a76534b304c7458784f5133726f314d796554504270"),
        bytes("0x68627933384a433036686e6772726e585a38366472534a44496d5a7152707661497a3367493563746d58496f31464167565030476c674961753076354c506b71743637495846395945434f7878464f3039424c536d6a43313333594e36395969427638667a384731723334784b634c784175776233416b57744279506a69625332324833534f4f57664e5761786174473736754170723752436c78754c68676b685148763556787479626548417663666f6d47384f454a6a654978584f6649687771334b6e363459564277584b354871756a664b4a5a723251474d676b67536557506f626751433831654b5175354364695139654177326776545547344534585656644f764f6c6a67453058576d747546567955"),
        bytes("0x33654444624f4d4c644238484a727971316f6374745a53666f774454687a4e6a6b375236633879706638316b433043626464717259595269744b38526554534f3464767a424a61517a475576423930556161705a52477044364c523239446a577376707a553458355270757858686853617267396a436464523768777a5854496675364d6336734c685252687637")
    ];

    uint256[10] txnLengths = [
        uint256(298),
        uint256(230),
        uint256(190),
        uint256(102),
        uint256(646),
        uint256(624),
        uint256(634),
        uint256(244),
        uint256(554),
        uint256(286)
    ];

    function _helper_sequencerInbox_appendTx(uint256 numTxns) internal view returns (bytes memory, uint256[] memory) {
        uint256[] memory transactionLengths = new uint256[](numTxns);
        bytes memory combinedNumTxnsBytes;
        uint256 rlpEncodedTxnIndex;

        for (uint256 i; i < numTxns; i++) {
            rlpEncodedTxnIndex = i % 10;
            combinedNumTxnsBytes = abi.encodePacked(combinedNumTxnsBytes, rlpEncodedTransactions[rlpEncodedTxnIndex]);
            transactionLengths[i] = rlpEncodedTransactions[rlpEncodedTxnIndex].length;
        }

        bytes memory resultantTxnBatchBytes = abi.encodePacked(combinedNumTxnsBytes);

        return (resultantTxnBatchBytes, transactionLengths);
    }

    function _helper_sequencerInbox_appendTx_old(uint256 numTxns)
        internal
        view
        returns (bytes memory, uint256[] memory)
    {
        bytes[] memory currentBatchTransactions = new bytes[](numTxns);
        uint256[] memory transactionLengthArray = new uint256[](numTxns);
        uint256 rlpEncodedTxnIndex;

        for (uint256 i; i < numTxns; i++) {
            rlpEncodedTxnIndex = i % 10;
            currentBatchTransactions[i] = rlpEncodedTransactions[rlpEncodedTxnIndex];
            transactionLengthArray[i] = rlpEncodedTransactions[rlpEncodedTxnIndex].length;
        }

        bytes memory resultantTxBatch = abi.encode(currentBatchTransactions);

        return (resultantTxBatch, transactionLengthArray);
    }

    function _helper_createTxBatch_hardcoded() internal view returns (bytes memory) {
        return abi.encodePacked(
            RLPEncodedTransactionsUtil.rlpEncodedTransactions[0],
            RLPEncodedTransactionsUtil.rlpEncodedTransactions[1],
            RLPEncodedTransactionsUtil.rlpEncodedTransactions[2],
            RLPEncodedTransactionsUtil.rlpEncodedTransactions[3],
            RLPEncodedTransactionsUtil.rlpEncodedTransactions[4],
            RLPEncodedTransactionsUtil.rlpEncodedTransactions[5]
        );
    }

    function _helper_findTxLength_hardcoded() internal view returns (uint256[] memory) {
        uint256[] memory transactionLengthArray = new uint256[](6);
        for (uint256 i; i < 6; i++) {
            transactionLengthArray[i] = RLPEncodedTransactionsUtil.rlpEncodedTransactions[i].length;
        }
        return transactionLengthArray;
    }

    function _helper_getTxnInfo_fromTxnID(uint256 txnID) internal view returns(bytes memory, bytes memory, address, uint256) {
        return (
            rlpEncodedTransactions[txnID],
            txnData[txnID],
            txnSenders[txnID],
            txnLengths[txnID]
        );
    }

    function _helper_getTxnInfo_fromTxn(bytes memory txn) internal view returns(bytes memory, bytes memory, address, uint256) {
        uint256 txnArrLength = rlpEncodedTransactions.length;
        for(uint i; i < txnArrLength; i++) {
            if(keccak256(rlpEncodedTransactions[i]) == keccak256(txn)) {
                _helper_getTxnInfo_fromTxnID(i);
                break;
            }
        }
    }
}
